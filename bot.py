"""
–ü—Ä–æ—Å—Ç–æ–π telegram –±–æ—Ç —Å –∏–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–∫–∞–º–∏, –≤ –∫–æ—Ç–æ—Ä–æ–º –∑–∞–ª–æ–∂–µ–Ω–æ –∫—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ —è–∑—ã–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è Python.
–¢–∞–∫–∂–µ –±–æ—Ç –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ telegram, –æ—Ç–ø—Ä–∞–≤–ª—è—è –≤ –æ—Ç–≤–µ—Ç –≤–≤–µ–¥—ë–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º —Ç–µ–∫—Å—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ Voice(–≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ).
"""


# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω—É–∂–Ω—ã–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –∏ –º–æ–¥—É–ª–∏.
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, ParseMode
from telegram.ext import Updater, CommandHandler, CallbackContext, MessageHandler, Filters, CallbackQueryHandler
from voice import text_to_file
from theory import theory_dict


# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –æ—Ç BotFather –≤ telegram –∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –µ–≥–æ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é "TOKEN".
TOKEN = "–í—Å—Ç–∞–≤—å—Ç–µ —Å—é–¥–∞ –≤–∞—à —Ç–æ–∫–µ–Ω"


# –°–æ–∑–¥–∞—ë–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º–∏ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞–º–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –∏–Ω–ª–∞–π–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä.
# –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä("callback_data") —ç—Ç–æ —Ç–æ, —á—Ç–æ –±—É–¥–µ—Ç –ø—Ä–∏—Å—ã–ª–∞—Ç—å telegram –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–∞–∂–¥—É—é –∫–Ω–æ–ø–∫—É.
CALLBACK_BUTTON1_YES = "callback_button1_yes"
CALLBACK_BUTTON2_NO = "callback_button2_no"
CALLBACK_BUTTON3_GENERAL = "callback_button3_general"
CALLBACK_BUTTON4_TYPES = "callback_button4_types"
CALLBACK_BUTTON5_SYNTAX_1 = "callback_button5_syntax_1"
CALLBACK_BUTTON5_SYNTAX_2 = "callback_button5_syntax_2"
CALLBACK_BUTTON5_SYNTAX_3 = "callback_button5_syntax_3"
CALLBACK_BUTTON5_SYNTAX_4 = "callback_button5_syntax_4"
CALLBACK_BUTTON6_MORE = "callback_button6_more"
CALLBACK_BUTTON7_BACK = "callback_button7_back"
CALLBACK_BUTTON8_ZEN = "callback_button8_zen"
CALLBACK_BUTTON9_WEBSITE = "callback_button9_website"


# –°–æ–∑–¥–∞—ë–º —Å–ª–æ–≤–∞—Ä—å —Å –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏ –∫–Ω–æ–ø–æ–∫.
TITLES = {
    CALLBACK_BUTTON1_YES: "–î–∞, –¥–∞–≤–∞–π! ü§ìüëç",
    CALLBACK_BUTTON2_NO: "–ù–µ—Ç, –¥–∞–≤–∞–π –≤ –¥—Ä—É–≥–æ–π —Ä–∞–∑ üòû",
    CALLBACK_BUTTON3_GENERAL: "–û–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è üìñ",
    CALLBACK_BUTTON4_TYPES: "–¢–∏–ø—ã –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö üìô",
    CALLBACK_BUTTON5_SYNTAX_1: "–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–¥–∞ Python üìò",
    CALLBACK_BUTTON5_SYNTAX_2: "–û—Ç—Å—Ç—É–ø—ã –≤ Python  üìó",
    CALLBACK_BUTTON5_SYNTAX_3: "–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ üìï",
    CALLBACK_BUTTON5_SYNTAX_4: "–°—Ç—Ä–æ–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ üìí",
    CALLBACK_BUTTON6_MORE: "–ï—â—ë ‚û°Ô∏è",
    CALLBACK_BUTTON7_BACK: "–ù–∞–∑–∞–¥ ‚¨ÖÔ∏è",
    CALLBACK_BUTTON8_ZEN: "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –î–∑–µ–Ω –ü–∞–π—Ç–æ–Ω–∞ üßô‚Äç‚ôÇÔ∏è",
    CALLBACK_BUTTON9_WEBSITE: "–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∞–π—Ç Python üåê"
}


def keyboard_start():
    """
    –ü–æ–ª—É—á–∏—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è.
    """
    # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ —Å–ø–∏—Å–∫–∞ —Å–æ–¥–µ—Ä–∂–∞—â–µ–≥–æ –≤–ª–æ–∂–µ–Ω–Ω—ã–µ —Å–ø–∏—Å–∫–∏.
    # –ö–∞–∂–¥—ã–π –≤–ª–æ–∂–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –≤–Ω—É—Ç—Ä–∏ —Å–ø–∏—Å–∫–∞ "keyboard" - —ç—Ç–æ –æ–¥–∏–Ω –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–π —Ä—è–¥ –∫–Ω–æ–ø–æ–∫. –ö–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç –≤–Ω—É—Ç—Ä–∏ –≤–ª–æ–∂–µ–Ω–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ - –∫–Ω–æ–ø–∫–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã.
    keyboard = [
        [
            InlineKeyboardButton(TITLES[CALLBACK_BUTTON1_YES], callback_data=CALLBACK_BUTTON1_YES),
            InlineKeyboardButton(TITLES[CALLBACK_BUTTON2_NO], callback_data=CALLBACK_BUTTON2_NO)
        ]
    ]
    return InlineKeyboardMarkup(keyboard)


def keyboard_1():
    """
    –ü–æ–ª—É—á–∏—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é —Å —Ç–µ–º–∞–º–∏ –ø–æ python.
    """
    keyboard = [
        [
            InlineKeyboardButton(TITLES[CALLBACK_BUTTON3_GENERAL], callback_data=CALLBACK_BUTTON3_GENERAL)
        ], 
        [
            InlineKeyboardButton(TITLES[CALLBACK_BUTTON4_TYPES], callback_data=CALLBACK_BUTTON4_TYPES)
        ],
        [
            InlineKeyboardButton(TITLES[CALLBACK_BUTTON5_SYNTAX_1], callback_data=CALLBACK_BUTTON5_SYNTAX_1)
        ],
        [
            InlineKeyboardButton(TITLES[CALLBACK_BUTTON5_SYNTAX_2], callback_data=CALLBACK_BUTTON5_SYNTAX_2)
        ],
        [
            InlineKeyboardButton(TITLES[CALLBACK_BUTTON5_SYNTAX_3], callback_data=CALLBACK_BUTTON5_SYNTAX_3)
        ],
        [
            InlineKeyboardButton(TITLES[CALLBACK_BUTTON5_SYNTAX_4], callback_data=CALLBACK_BUTTON5_SYNTAX_4)
        ],
        [
            InlineKeyboardButton(TITLES[CALLBACK_BUTTON6_MORE], callback_data=CALLBACK_BUTTON6_MORE)
        ]
    ]
    return InlineKeyboardMarkup(keyboard)


def keyboard_2():
    """
    –ü–æ–ª—É—á–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –¥–µ–π—Å—Ç–≤–∏—è–º–∏.
    –í–æ–∑–º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏ –Ω–∞ –æ—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ.
    """
    keyboard = [
        [
            InlineKeyboardButton(TITLES[CALLBACK_BUTTON8_ZEN], callback_data=CALLBACK_BUTTON8_ZEN)
        ],
        # –î–∞–Ω–Ω–∞—è –∫–Ω–æ–ø–∫–∞ –Ω–∏–∂–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –Ω–∏–∫–∞–∫–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è, –∞ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∞–π—Ç Python.
        [
            InlineKeyboardButton(TITLES[CALLBACK_BUTTON9_WEBSITE], callback_data=CALLBACK_BUTTON9_WEBSITE, url="https://www.python.org/")
        ],
        [
            InlineKeyboardButton(TITLES[CALLBACK_BUTTON7_BACK], callback_data=CALLBACK_BUTTON7_BACK)
        ]
    ]
    return InlineKeyboardMarkup(keyboard)


def keyboard_callback_handler(update: Update, context: CallbackContext):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –í–°–ï–• –∫–Ω–æ–ø–æ–∫ —Å–æ –í–°–ï–• –∫–ª–∞–≤–∏–∞—Ç—É—Ä.
    """

    query = update.callback_query
    data = query.data
    
    keyboard_1_text = "\n\n–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º—É:"
    keyboard_2_text = "\n\n–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤:"

    # –ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É telegram –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ—Ç–≤–µ—Ç –≤ –≤–∏–¥–µ callback_data.
    # –í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∑–Ω–∞—á–µ–Ω–∏—è callback_data –ø–æ–¥–±–∏—Ä–∞–µ—Ç—Å—è –Ω—É–∂–Ω–∞—è —Ç–µ–æ—Ä–∏—è –∏–∑ —Å–ª–æ–≤–∞—Ä—è "theory_dict",
    # –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –æ—Ç–≤–µ—Ç–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, –ø—Ä–∏–∫—Ä–µ–ø–ª—è–µ—Ç—Å—è –Ω—É–∂–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞.
    if data == CALLBACK_BUTTON1_YES:
        query.edit_message_text(
            text=theory_dict["HISTORY"] + keyboard_1_text,
            reply_markup=keyboard_1()
        )   
    elif data == CALLBACK_BUTTON2_NO:
        query.edit_message_text(
            text="–û–∫, –µ—Å–ª–∏ –ø–µ—Ä–µ–¥—É–º–∞–µ—Ç–µ - –ø—Ä–∏—Ö–æ–¥–∏—Ç–µ! –í—ã –∑–Ω–∞–µ—Ç–µ, –≥–¥–µ –º–µ–Ω—è –Ω–∞–π—Ç–∏ üòâüòé"
        )
    elif data == CALLBACK_BUTTON3_GENERAL:
        query.edit_message_text(
            text=theory_dict["GENERAL"] + keyboard_1_text,
            parse_mode=ParseMode.MARKDOWN,
            reply_markup=keyboard_1()
        )
    elif data == CALLBACK_BUTTON4_TYPES:
        query.edit_message_text(
            text=theory_dict["TYPES"] + keyboard_1_text,
            parse_mode=ParseMode.MARKDOWN,
            reply_markup=keyboard_1()
        )
    elif data == CALLBACK_BUTTON5_SYNTAX_1:
        query.edit_message_text(
            text=theory_dict["SYNTAX_1"] + keyboard_1_text,
            parse_mode=ParseMode.MARKDOWN,
            reply_markup=keyboard_1()
        )
    elif data == CALLBACK_BUTTON5_SYNTAX_2:
        query.edit_message_text(
            text=theory_dict["SYNTAX_2"] + keyboard_1_text,
            parse_mode=ParseMode.MARKDOWN,
            reply_markup=keyboard_1()
        )
    elif data == CALLBACK_BUTTON5_SYNTAX_3:
        query.edit_message_text(
            text=theory_dict["SYNTAX_3"] + keyboard_1_text,
            parse_mode=ParseMode.MARKDOWN,
            reply_markup=keyboard_1()
        )
    elif data == CALLBACK_BUTTON5_SYNTAX_4:
        query.edit_message_text(
            text=theory_dict["SYNTAX_4"] + keyboard_1_text,
            parse_mode=ParseMode.MARKDOWN,
            reply_markup=keyboard_1()
        )
    elif data == CALLBACK_BUTTON6_MORE:
        query.edit_message_text(
            text=theory_dict["KEYBOARD_2"] + keyboard_2_text,
            parse_mode=ParseMode.MARKDOWN,
            reply_markup=keyboard_2()
        )
    elif data == CALLBACK_BUTTON7_BACK:
        query.edit_message_text(
            text=theory_dict["HISTORY"] + keyboard_1_text,
            parse_mode=ParseMode.MARKDOWN,
            reply_markup=keyboard_1()
        )
    elif data == CALLBACK_BUTTON8_ZEN:
        query.edit_message_text(
            text=theory_dict["ZEN"] + keyboard_2_text,
            parse_mode=ParseMode.MARKDOWN,
            reply_markup=keyboard_2()
        )


def start(update: Update, context: CallbackContext):
    """
    –ö–æ–º–∞–Ω–¥–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ –∏ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è.
    """
    update.message.reply_text(
        text=f"–ü—Ä–∏–≤–µ—Ç, {update.effective_user.first_name}!"
    )
    update.message.reply_text(
        text="–Ø –±–æ—Ç - –ü–∏—Ç–æ–Ω—á–∏–∫)\n–£ –º–µ–Ω—è –¥–ª—è –≤–∞—Å –µ—Å—Ç—å –Ω–µ–±–æ–ª—å—à–∞—è –≤–≤–æ–¥–Ω–∞—è —Ç–µ–æ—Ä–∏—è –ø–æ —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ–º—É —è–∑—ã–∫—É –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è - Python!"
    )
    file_name_1 = text_to_file(
        text="–ö—Å—Ç–∞—Ç–∏, —è–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è python –Ω–∞—É—á–∏–ª –º–µ–Ω—è —Ä–∞–∑–≥–æ–≤–∞—Ä–∏–≤–∞—Ç—å!"
    )
    update.message.reply_voice(
        voice=open(file_name_1, "rb")
    )
    update.message.reply_text(
        text="–•–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –ø—Ä–æ Python?)",
        reply_markup=keyboard_start()
    )
    

def help_handler(update: Update, context: CallbackContext):
    """
    –ö–æ–º–∞–Ω–¥–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–º–æ—â–∏.
    """
    help_text = "–≠—Ç–æ –Ω–µ–±–æ–ª—å—à–æ–π –±–æ—Ç —Å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏ –∏ –æ–±—â–µ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —è–∑—ã–∫–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è Python.\n\n–í—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –∫—Ä–∞—Ç–∫—É—é —Ç–µ–æ—Ä–∏—é –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É —Å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º —Ä–∞–∑–¥–µ–ª–æ–º.\n\n–¢–∞–∫–∂–µ –±–æ—Ç —É–º–µ–µ—Ç –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤—ã–≤–∞—Ç—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–µ –≤–∞–º–∏ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –≥–æ–ª–æ—Å–æ–≤–æ–µ. –ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –ª—é–±–æ–π —Ç–µ–∫—Å—Ç –±–æ—Ç—É –∏ –æ–Ω –≤–µ—Ä–Ω–µ—Ç –≤–∞–º –µ–≥–æ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è."
    update.message.reply_text(help_text)


def reply(update: Update, context: CallbackContext):
    """
    –ö–æ–º–∞–Ω–¥–∞ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –≤—Ö–æ–¥—è—â–µ–≥–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å –ø–æ–º–æ—â—å—é –º–æ–¥—É–ª—è voice.py
    """
    file_name_2 = text_to_file(
        update.message.text
    )
    update.message.reply_voice(
        voice=open(
            file_name_2, "rb"
        )
    )


updater = Updater(TOKEN)


# –°–æ–∑–¥–∞—ë–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥.
updater.dispatcher.add_handler(CommandHandler("start", start))
updater.dispatcher.add_handler(CommandHandler("help", help_handler))
updater.dispatcher.add_handler(MessageHandler(Filters.text & ~Filters.command, reply))
updater.dispatcher.add_handler(CallbackQueryHandler(callback=keyboard_callback_handler))


# –ù–∞—á–∏–Ω–∞–µ–º –±–µ—Å–∫–æ–Ω–µ—á–Ω—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
updater.start_polling()
updater.idle()
